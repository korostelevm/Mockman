AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Globals:
  Function:
    Timeout: 15
Parameters:
  ServiceSubDomainName:
    Type: String
    Default: 'snowman'
  RootUrl:
    Type: String
    Default: '{{resolve:ssm:/account/root-url:1}}'
  SslCert: 
    Type: String
    Default: '{{resolve:ssm:/account/ssl-cert:1}}'
  BucketName:
    Type: String
    Default: ''
  Environment:
    Type: String
    Default: production
  Namespace:
    Type: String
    Default: ''
Resources:

  # MockTable:
  #     Type: AWS::DynamoDB::Table
  #     Properties
  #       BillingMode: PAY_PER_REQUEST
  #       AttributeDefinitions:
  #       - AttributeName: "mockId"
  #         AttributeType: "S"
  #       - 
  #         AttributeName: Service
  #         AttributeType: S
  #       KeySchema:
  #       - AttributeName: "mockId"
  #         KeyType: "HASH"
  #       GlobalSecondaryIndexes:
  #         -
  #           IndexName: ServiceIndex
  #           KeySchema:
  #             - 
  #                 AttributeName: Service
  #                 KeyType: HASH
  #             - 
  #                 AttributeName: mockId
  #                 KeyType: RANGE
  #           Projection:
  #             ProjectionType: ALL
  #       SSESpecification:
  #         SSEEnabled: True
  #       TableName: !Join [ '', [ 'Mock'] ]
  
  # ServicesTable:
  #     Type: AWS::DynamoDB::Table
  #     Properties:
  #       BillingMode: PAY_PER_REQUEST
  #       AttributeDefinitions:
  #       - AttributeName: "serviceId"
  #         AttributeType: "S"
  #       - 
  #         AttributeName: Service
  #         AttributeType: S
  #       KeySchema:
  #       - AttributeName: "serviceId"
  #         KeyType: "HASH"
  #       GlobalSecondaryIndexes:
  #         -
  #           IndexName: ServiceIndex
  #           KeySchema:
  #             - 
  #                 AttributeName: Service
  #                 KeyType: HASH
  #             - 
  #                 AttributeName: serviceId
  #                 KeyType: RANGE
  #           Projection:
  #             ProjectionType: ALL
  #       SSESpecification:
  #         SSEEnabled: True
  #       TableName: !Join [ '', [ 'Service'] ]
  
  
  APIDomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Properties:
      SecurityPolicy: TLS_1_2
      RegionalCertificateArn:
        Ref: SslCert
      DomainName:
        Fn::Join: [ '', [ Ref: ServiceSubDomainName, Ref: Namespace, '.', Ref: RootUrl ] ]
      EndpointConfiguration:
        Types: ['REGIONAL']
  APIDomain:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneName:
        Fn::Join: [ '', [ Ref: RootUrl, '.' ] ]
      RecordSets:
        - Name:
            Ref: APIDomainName
          Type: A
          AliasTarget:
            DNSName:
              Fn::GetAtt: [APIDomainName, RegionalDomainName]
            HostedZoneId:
              Fn::GetAtt: [APIDomainName, RegionalHostedZoneId]
Outputs:
  APIDomainName:
    Description: 'API domain name'
    Value:
      Ref: APIDomainName
